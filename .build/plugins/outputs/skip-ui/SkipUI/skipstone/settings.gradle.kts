// This is the top-level Gradle settings generated for the Skip project.
// The module dependencies it contains may be symbolic links to peer folders.
//
// This file is generated by the Skip transpiler plugin and is
// derived from the aggregate Skip/skip.yml files from the SPM project.
// Edits made directly to this file will be lost.
//
// Open with External Editor to build and run this project in an IDE.
//
dependencyResolutionManagement {
    versionCatalogs {
        create("libs") {
            version("androidx-compose-bom", "2024.06.00")
            library("androidx-compose-bom", "androidx.compose", "compose-bom").versionRef("androidx-compose-bom")
            library("androidx-compose-runtime", "androidx.compose.runtime", "runtime").withoutVersion()
            library("kotlin-reflect", "org.jetbrains.kotlin", "kotlin-reflect").withoutVersion()
            version("jvm", "17")
            version("android-sdk-min", "29")
            version("android-sdk-compile", "34")
            version("android-gradle-plugin", "8.5.0")
            plugin("android-library", "com.android.library").versionRef("android-gradle-plugin")
            plugin("android-application", "com.android.application").versionRef("android-gradle-plugin")
            version("kotlin", "2.0.0")
            plugin("kotlin-android", "org.jetbrains.kotlin.android").versionRef("kotlin")
            plugin("kotlin-compose", "org.jetbrains.kotlin.plugin.compose").versionRef("kotlin")
            library("kotlin-bom", "org.jetbrains.kotlin", "kotlin-bom").versionRef("kotlin")
            version("kotlin-coroutines", "1.8.1")
            library("kotlinx-coroutines-core", "org.jetbrains.kotlinx", "kotlinx-coroutines-core").versionRef("kotlin-coroutines")
            library("kotlinx-coroutines-android", "org.jetbrains.kotlinx", "kotlinx-coroutines-android").versionRef("kotlin-coroutines")
            version("coil-compose", "2.6.0")
            version("androidx-navigation", "2.7.7")
            version("androidx-appcompat", "1.7.0")
            version("androidx-activity", "1.9.0")
            version("androidx-lifecycle-process", "2.8.2")
            version("androidx-material3-adaptive", "1.0.0-beta04")
            library("androidx-core-ktx", "androidx.core", "core-ktx").withoutVersion()
            library("androidx-compose-ui", "androidx.compose.ui", "ui").withoutVersion()
            library("androidx-compose-ui-tooling", "androidx.compose.ui", "ui-tooling").withoutVersion()
            library("androidx-compose-animation", "androidx.compose.animation", "animation").withoutVersion()
            library("androidx-compose-material", "androidx.compose.material", "material").withoutVersion()
            library("androidx-compose-material-icons-extended", "androidx.compose.material", "material-icons-extended").withoutVersion()
            library("androidx-compose-material3", "androidx.compose.material3", "material3").withoutVersion()
            library("androidx-compose-foundation", "androidx.compose.foundation", "foundation").withoutVersion()
            library("androidx-appcompat", "androidx.appcompat", "appcompat").versionRef("androidx-appcompat")
            library("androidx-appcompat-resources", "androidx.appcompat", "appcompat-resources").versionRef("androidx-appcompat")
            library("androidx-navigation-compose", "androidx.navigation", "navigation-compose").versionRef("androidx-navigation")
            library("androidx-activity-compose", "androidx.activity", "activity-compose").versionRef("androidx-activity")
            library("androidx-lifecycle-process", "androidx.lifecycle", "lifecycle-process").versionRef("androidx-lifecycle-process")
            library("androidx-compose-material3-adaptive", "androidx.compose.material3.adaptive", "adaptive").versionRef("androidx-material3-adaptive")
            library("coil-compose", "io.coil-kt", "coil-compose").versionRef("coil-compose")
            library("androidx-compose-ui-test", "androidx.compose.ui", "ui-test").withoutVersion()
            library("androidx-compose-ui-test-junit4", "androidx.compose.ui", "ui-test-junit4").withoutVersion()
            library("androidx-compose-ui-test-manifest", "androidx.compose.ui", "ui-test-manifest").withoutVersion()
        }
        create("testLibs") {
            version("robolectric", "4.11.1")
            library("robolectric", "org.robolectric", "robolectric").versionRef("robolectric")
            library("json", "org.json", "json").version("20231013")
            version("androidx-test", "1.6.1")
            library("androidx-test-runner", "androidx.test", "runner").versionRef("androidx-test")
            library("androidx-test-core", "androidx.test", "core").versionRef("androidx-test")
            library("androidx-test-rules", "androidx.test", "rules").versionRef("androidx-test")
            version("androidx-test-ext-junit", "1.2.1")
            library("androidx-test-ext-junit", "androidx.test.ext", "junit").versionRef("androidx-test-ext-junit")
            version("kotlin-coroutines-test", "1.8.1")
            library("kotlinx-coroutines-test", "org.jetbrains.kotlinx", "kotlinx-coroutines-test").versionRef("kotlin-coroutines-test")
            library("kotlin-test", "org.jetbrains.kotlin", "kotlin-test").withoutVersion()
            library("kotlin-test-junit", "org.jetbrains.kotlin", "kotlin-test-junit").withoutVersion()
        }
    }
    repositories {
        mavenCentral()
        google()
    }
}

pluginManagement {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        google()
    }
}

rootProject.name = "skip.ui"
include(":SkipUI")
include(":SkipModel")
include(":SkipFoundation")
include(":SkipLib")
include(":SkipUnit")
